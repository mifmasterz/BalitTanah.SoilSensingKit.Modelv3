using Newtonsoft.Json;
using System;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;

namespace TestingApi
{
    public class DataInput
    {
        public float[] Reflectance { get; set; }
    }
    class Program
    {
        static async Task Main(string[] args)
        {
            //Console.WriteLine("Hello World!");
            var client = new HttpClient();
            //Data input yang dimasukkan dari array 0 - akhir itu nilai reflectance dari wave length: 2501.982414 sampe 1350.724346
            var input = new DataInput()
            {
                Reflectance = new float[] { 3.870431673f, 3.481730867f, 3.112638851f, 2.763155624f, 2.433281188f, 2.123015541f, 1.821805159f, 1.542818062f, 1.283203688f, 1.053804647f, 0.859435424f, 0.688400759f, 0.528937874f, 0.386656257f, 0.273327779f, 0.181619309f, 0.086547334f, -0.020686199f, -0.108966108f, -0.127193807f, -0.049719598f, 0.101320304f, 0.275953162f, 0.424379851f, 0.501402821f, 0.463070015f, 0.284560372f, -0.010958054f, -0.350879445f, -0.650542925f, -0.857976645f, -0.966180962f, -0.991240539f, -0.951875844f, -0.869130543f, -0.769525473f, -0.675436253f, -0.592272311f, -0.509897178f, -0.415744669f, -0.303334299f, -0.170076402f, -0.013439285f, 0.167266581f, 0.368362153f, 0.583510926f, 0.805146387f, 1.022939546f, 1.228599213f, 1.432440934f, 1.673012904f, 1.989219046f, 2.362465847f, 2.695963754f, 2.866959647f, 2.796613273f, 2.477003198f, 1.954125767f, 1.304506165f, 0.630770515f, 0.054425863f, -0.328637044f, -0.506381571f, -0.550820885f, -0.550805795f, -0.551254759f, -0.549231649f, -0.531662245f, -0.505681828f, -0.490532305f, -0.492788415f, -0.502636919f, -0.511617012f, -0.522653817f, -0.539727246f, -0.557485984f, -0.568197472f, -0.573716544f, -0.582546134f, -0.596270688f, -0.606646035f, -0.607742585f, -0.604068129f, -0.602794906f, -0.603615693f, -0.602273467f, -0.600711508f, -0.605465234f, -0.615192728f, -0.617356195f, -0.601867675f, -0.574023448f, -0.548526059f, -0.533348424f, -0.525544649f, -0.521514993f, -0.523594545f, -0.532966296f, -0.541972806f, -0.540203487f, -0.526878713f, -0.512011449f, -0.505030799f, -0.506948857f, -0.514562633f, -0.526713898f, -0.542692008f, -0.557798775f, -0.566234627f, -0.568240773f, -0.569369903f, -0.571916926f, -0.571054964f, -0.561446416f, -0.543855312f, -0.521653212f, -0.494455978f, -0.460711551f, -0.426239348f, -0.403407095f, -0.398054874f, -0.401237555f, -0.397636902f, -0.381222103f, -0.359178938f, -0.341497495f, -0.331990853f, -0.329503849f, -0.33199431f, -0.33497624f, -0.328613218f, -0.301192262f, -0.246041028f, -0.164326169f, -0.063561474f, 0.042029365f, 0.130771556f, 0.180770438f, 0.181703327f, 0.136874165f, 0.052706982f, -0.068084408f, -0.217862284f, -0.374398256f, -0.510857915f, -0.618465659f, -0.71201677f, -0.807479345f, -0.901002072f, -0.973504665f, -1.035385455f, -1.086644441f, -1.127281623f, -1.157297002f }
            };

            var resp = await client.PostAsync("https://localhost:44325/api/Inference/ProcessData", new StringContent(JsonConvert.SerializeObject(input),Encoding.UTF8,"application/json"));
            if (resp.IsSuccessStatusCode)
            {
                Console.WriteLine(await resp.Content.ReadAsStringAsync());
            }
            Console.ReadLine
             ();
        }
    }
}
